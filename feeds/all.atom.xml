<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>habeebq</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2015-12-31T00:00:00+01:00</updated><entry><title>A tale of storage benchmarks</title><link href="/a-tale-of-storage-benchmarks.html" rel="alternate"></link><updated>2015-12-31T00:00:00+01:00</updated><author><name>habeebq</name></author><id>tag:,2015-12-31:a-tale-of-storage-benchmarks.html</id><summary type="html">&lt;p&gt;When I received a new SSD I decided to benchmark all of my drives before I connected it to see how it would far and whether anything would change.&lt;/p&gt;
&lt;p&gt;I built my PC a number of years ago, based on Sandy Bridge and it has served me pretty well so far. The motherboard is a Gigabyte H67-M-UD2H-B3 which has 2 SATA3 ports and 4 SATA2 ports. The processor is a humble Core i3-2100 chugging along its 65W of coolness. Its not a high profile build but its a very smooth and balanced one.&lt;/p&gt;
&lt;p&gt;So the drives that I have are:&lt;/p&gt;
&lt;table class="table table-hover table-striped"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Drive&lt;/th&gt;
&lt;th&gt;Capactity&lt;/th&gt;
&lt;th&gt;Connection&lt;/th&gt;
&lt;th&gt;Other&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Samsung EVO 840&lt;/td&gt;
&lt;td&gt;120GB&lt;/td&gt;
&lt;td&gt;SATA-3&lt;/td&gt;
&lt;td&gt;FW: ??&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Samsung Spinpoint F3&lt;/td&gt;
&lt;td&gt;500GB&lt;/td&gt;
&lt;td&gt;SATA-3&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Seagate ST350041&lt;/td&gt;
&lt;td&gt;500GB&lt;/td&gt;
&lt;td&gt;SATA-2&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sandisk SSD Plus&lt;/td&gt;
&lt;td&gt;240 GB&lt;/td&gt;
&lt;td&gt;SATA-2&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5&gt;Few notes before you read through&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;I dont really believe benchmarks are a good indicator for general every performance. However, they can be a good indicator that something has gone wrong, if the benchmarks change after a configuration change. This was the reason I was benchmarking to see if adding an additional drive would change the scores. Spoiler alert: they didnt.&lt;/li&gt;
&lt;li&gt;A note on the Samsung EVO 840 drive. I bought this last christmas to boost the performance of the system. While I did see better boot times, i didnt see enough boost in everyday usage, and later I realized while this drive will do great benchmarks I dont think it really performs as spectacularly as I expected. In fact I now feel the slower Sandisk SSD Plus performs better.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Programs Used to benchmark&lt;/h1&gt;
&lt;p&gt;I used &lt;a href="http://www.majorgeeks.com/files/details/hdtach.html"&gt;HDTach&lt;/a&gt; in the past, however I couldnt export the results very cleanly.
So I found two other reliable programs.
- &lt;a href="http://crystalmark.info/software/CrystalDiskMark/index-e.html"&gt;CrystalDiskMark&lt;/a&gt;
- &lt;a href="http://www.hdtune.com/download.html"&gt;HDTune Free edition&lt;/a&gt; There is a free version on their dowloads page, keep your eye peeled&lt;/p&gt;
&lt;h1&gt;The first bench&lt;/h1&gt;
&lt;p&gt;This where I realized the EVO 840 was crapping out, so I had to re-optimized the drive and run the benchmarks again.
In the follownig benchmarks you can see the average transfer speed gonig from 100 Mbps to 300 Mbps.
However, the minimum transfer rate dropped to 1 Mbps, not sure what the implications of that are.&lt;/p&gt;
&lt;h3&gt;Before Optimization (FW upgrade)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;HD Tune: SAMSUNG HD502HJ Benchmark
Transfer Rate Minimum : 72.0 MB/sec
Transfer Rate Maximum : 136.4 MB/sec
Transfer Rate Average : 113.4 MB/sec
Access Time           : 13.6 ms
Burst Rate            : 176.3 MB/sec
CPU Usage             : 26.4%

CrystalDiskMark 5.1.0 x64 
Sequential Read (Q= 32,T= 1)   :   123.125 MB/s
Sequential Write (Q= 32,T= 1)  :   120.259 MB/s
Random Read 4KiB (Q= 32,T= 1)  :     0.844 MB/s [   206.1 IOPS]
Random Write 4KiB (Q= 32,T= 1) :     1.000 MB/s [   244.1 IOPS]
Sequential Read (T= 1)         :   121.431 MB/s
Sequential Write (T= 1)        :    99.610 MB/s
Random Read 4KiB (Q= 1,T= 1)   :     0.433 MB/s [   105.7 IOPS]
Random Write 4KiB (Q= 1,T= 1)  :     0.882 MB/s [   215.3 IOPS]
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;After optimization&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;HD Tune: Samsung SSD 840 EVO 120G Benchmark
Transfer Rate Minimum : 1.0 MB/sec
Transfer Rate Maximum : 449.1 MB/sec
Transfer Rate Average : 308.1 MB/sec
Access Time           : 0.4 ms
Burst Rate            : 196.7 MB/sec
CPU Usage             : 27.2%

CrystalDiskMark 5.1.0 x64 (C) 2007-2015 hiyohiyo
Sequential Read (Q= 32,T= 1)   :   554.872 MB/s
Sequential Write (Q= 32,T= 1)  :   500.100 MB/s
Random Read 4KiB (Q= 32,T= 1)  :   281.610 MB/s [ 68752.4 IOPS]
Random Write 4KiB (Q= 32,T= 1) :   237.549 MB/s [ 57995.4 IOPS]
Sequential Read (T= 1)         :   532.327 MB/s
Sequential Write (T= 1)        :   486.142 MB/s
Random Read 4KiB (Q= 1,T= 1)   :    39.854 MB/s [  9730.0 IOPS]
Random Write 4KiB (Q= 1,T= 1)  :   106.855 MB/s [ 26087.6 IOPS]
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Benchmarking the other drives&lt;/h2&gt;
&lt;p&gt;HD Tune: ST350041ST3500418AS Benchmark&lt;/p&gt;
&lt;p&gt;Transfer Rate Minimum : 66.0 MB/sec
Transfer Rate Maximum : 123.7 MB/sec
Transfer Rate Average : 100.0 MB/sec
Access Time           : 14.2 ms
Burst Rate            : 134.9 MB/sec
CPU Usage             : 26.4%&lt;/p&gt;
&lt;p&gt;CrystalDiskMark 5.1.0 x64 (C) 2007-2015 hiyohiyo&lt;/p&gt;
&lt;p&gt;Sequential Read (Q= 32,T= 1) :   125.418 MB/s
  Sequential Write (Q= 32,T= 1) :   105.855 MB/s
  Random Read 4KiB (Q= 32,T= 1) :     1.874 MB/s [   457.5 IOPS]
 Random Write 4KiB (Q= 32,T= 1) :     0.613 MB/s [   149.7 IOPS]
         Sequential Read (T= 1) :   125.202 MB/s
        Sequential Write (T= 1) :   122.893 MB/s
   Random Read 4KiB (Q= 1,T= 1) :     0.681 MB/s [   166.3 IOPS]
  Random Write 4KiB (Q= 1,T= 1) :     0.623 MB/s [   152.1 IOPS]&lt;/p&gt;
&lt;p&gt;HD Tune: SanDisk SDSSDA240G Benchmark&lt;/p&gt;
&lt;p&gt;Transfer Rate Minimum : 180.2 MB/sec
Transfer Rate Maximum : 235.4 MB/sec
Transfer Rate Average : 223.6 MB/sec
Access Time           : 0.0 ms
Burst Rate            : 72.8 MB/sec
CPU Usage             : 1.5%&lt;/p&gt;
&lt;p&gt;CrystalDiskMark 5.1.0 x64 (C) 2007-2015 hiyohiyo&lt;/p&gt;
&lt;p&gt;Sequential Read (Q= 32,T= 1) :   285.102 MB/s
  Sequential Write (Q= 32,T= 1) :   223.626 MB/s
  Random Read 4KiB (Q= 32,T= 1) :   159.216 MB/s [ 38871.1 IOPS]
 Random Write 4KiB (Q= 32,T= 1) :   193.717 MB/s [ 47294.2 IOPS]
         Sequential Read (T= 1) :   276.234 MB/s
        Sequential Write (T= 1) :   205.731 MB/s
   Random Read 4KiB (Q= 1,T= 1) :    22.391 MB/s [  5466.6 IOPS]
  Random Write 4KiB (Q= 1,T= 1) :    62.000 MB/s [ 15136.7 IOPS]&lt;/p&gt;
&lt;p&gt;Test : 1024 MiB [F: 0.1% (0.1/223.4 GiB)] (x5)  [Interval=5 sec]
  Date : 2016/01/09 0:05:48
    OS : Windows 8.1 Pro [6.3 Build 9600] (x64)&lt;/p&gt;
&lt;h3&gt;Running both SSD drives together&lt;/h3&gt;
&lt;p&gt;HD Tune:
SanDisk SDSSDA240G vs  840 EVO 120G&lt;/p&gt;
&lt;p&gt;Transfer Rate Minimum : 194.8 MB/sec | 389.2 MB/sec
Transfer Rate Maximum : 233.9 MB/sec | 402.9 MB/sec
Transfer Rate Average : 232.8 MB/sec | 397.1 MB/sec
Access Time           : 0.0 ms       | 0.1 ms    &lt;br/&gt;
Burst Rate            : 86.2 MB/sec  | 163.3 MB/sec
CPU Usage             : 2.8%         | 2.8%        &lt;/p&gt;
&lt;h3&gt;Running all 4 drives!&lt;/h3&gt;
&lt;p&gt;HD Tune: SanDisk SDSSDA240G Benchmark&lt;/p&gt;
&lt;p&gt;Transfer Rate Minimum : 203.1 MB/sec
Transfer Rate Maximum : 235.7 MB/sec
Transfer Rate Average : 229.6 MB/sec
Access Time           : 0.0 ms
Burst Rate            : 85.9 MB/sec
CPU Usage             : 4.0%&lt;/p&gt;
&lt;p&gt;HD Tune: Samsung SSD 840 EVO 120G Benchmark&lt;/p&gt;
&lt;p&gt;Transfer Rate Minimum : 381.5 MB/sec
Transfer Rate Maximum : 401.3 MB/sec
Transfer Rate Average : 390.0 MB/sec
Access Time           : 0.1 ms
Burst Rate            : 162.9 MB/sec
CPU Usage             : 4.0%&lt;/p&gt;
&lt;p&gt;HD Tune: SAMSUNG HD502HJ Benchmark&lt;/p&gt;
&lt;p&gt;Transfer Rate Minimum : 72.0 MB/sec
Transfer Rate Maximum : 136.4 MB/sec
Transfer Rate Average : 113.5 MB/sec
Access Time           : 13.7 ms
Burst Rate            : 162.4 MB/sec
CPU Usage             : 3.9%&lt;/p&gt;
&lt;p&gt;HD Tune: ST350041ST3500418AS Benchmark&lt;/p&gt;
&lt;p&gt;Transfer Rate Minimum : 66.0 MB/sec
Transfer Rate Maximum : 123.7 MB/sec
Transfer Rate Average : 100.0 MB/sec
Access Time           : 14.3 ms
Burst Rate            : 130.7 MB/sec
CPU Usage             : 3.8%&lt;/p&gt;</summary></entry><entry><title>A week with an iPhone</title><link href="/a-week-with-an-iphone.html" rel="alternate"></link><updated>2015-11-16T00:00:00+01:00</updated><author><name>habeebq</name></author><id>tag:,2015-11-16:a-week-with-an-iphone.html</id><summary type="html">&lt;p&gt;I thought I'd jot down some notes as I go through this journey with the iphone.&lt;/p&gt;
&lt;p&gt;The overall experience is good mainly as the battery life is pretty good. Car navigation journeys that would have caused my
android phones to overhead and battery go down from 100 to 30, only causes the iPhone 5 to go down to 70. Immediately this helps
me as I am not always worried about getting the phone to a charge port immediately. Its a solid performer, reliable and does what it does.&lt;/p&gt;
&lt;p&gt;There are some differences however in usablility.&lt;/p&gt;
&lt;h3&gt;Touch&lt;/h3&gt;
&lt;p&gt;Touches seem to need to register a bit lower than what you are trying to hit i.e. it seems that sometimes the hitbox is lower than
the actual text or icon. I'm not at all used to the keyboard at all and constantly making mistakes and hitting backspace instead of enter too much.&lt;/p&gt;
&lt;h3&gt;Gestures&lt;/h3&gt;
&lt;p&gt;There is no gesture discoverability and im sure most users dont even know about it. For e.g. hitting the top status bar scrolls all
the way to the top, this is important for pull-to-refresh based feeds.
Also, im not even sure what swiping does yet. Sometimes it works to go back, sometimes it doesnt. I'm not sure if its a universal gesture or not.
The 'Tips' app doesnt help here either, i went through the whole thing withuot learning about gestures. No onboarding at all.&lt;/p&gt;
&lt;h3&gt;Icons&lt;/h3&gt;
&lt;p&gt;Apples own built-in app icons look too dated. They have annoying gradients on the backgrounds, and are a bit complex.
In comparison Google's icons on iOS look great, they are flat and clean.&lt;/p&gt;
&lt;h3&gt;Appstore discoverability&lt;/h3&gt;
&lt;p&gt;I'm not quite sure whether this is better or worse than the Play Store yet. I'm trying to discover apps in featured or top lists, it is very similar
to the Play Store, except that the "Similar Apps" or "Other user installed" sections contain less apps.&lt;/p&gt;
&lt;p&gt;Also I havent seen the Appstore recommending me any apps yet, possibly i need to really dig more.&lt;/p&gt;
&lt;h3&gt;Appstore selection&lt;/h3&gt;
&lt;p&gt;The Play Store has probably grown much bigger than the Appstore, but its hard to tell. On Android there are a massive amount of homebrew and independent
developers, and a huge selection of upcoming material design apps. I am not sure the same is true for the Appstore. The Appstore seems to be more dominated
by games so far from what I can see.&lt;/p&gt;
&lt;h3&gt;App Prices&lt;/h3&gt;
&lt;p&gt;The apps on the iOS Appstore are definitely more expensive than on Android. On the Play Store you rarely ever see apps costing mor than $10 and the
majority is i the $2 region. On the Appstore its more in the $4 region and there are many apps charging over $10. It seems they get along okay.&lt;/p&gt;
&lt;h3&gt;App Review views&lt;/h3&gt;
&lt;p&gt;In the beginning I was quite surprised to see such less reviews on certain apps until I realized it only displays the reviews for the current version.
It is possible to select "All versions" in order to see the total reviews for the app.&lt;/p&gt;</summary></entry><entry><title>Moving to the Dark side</title><link href="/moving-to-the-dark-side.html" rel="alternate"></link><updated>2015-11-06T00:00:00+01:00</updated><author><name>habeebq</name></author><id>tag:,2015-11-06:moving-to-the-dark-side.html</id><summary type="html">&lt;p&gt;Most people who know me I personally prefer Android, although I've never forced my opinion on someone else as I believe people have different use cases and requirements depending on how they use their phones.&lt;/p&gt;
&lt;p&gt;So I've finally decided to use an iOS device as my daily driver for atleast a year and see how it goes. It wasnt an easy decision to make, but hey...lets keep an open mind.&lt;/p&gt;
&lt;h3&gt;Devices I base my opinion on&lt;/h3&gt;
&lt;p&gt;So far, I've had a Galaxy S, Galaxy S3 and a MotoG as my daily drivers.
I have used an iPhone5 occasionally.
Obviously I follow the tech scene, so I read reviews etc...but with a grain of salt.&lt;/p&gt;
&lt;h3&gt;What draws me to an Apple device&lt;/h3&gt;
&lt;p&gt;Engineering done well. I feel that Apple devices are well engineered. All the way from the SoC, to the physical product, and extending to the platform. People say its been lagging behind Android, but well, both of these operating systems have been lagging behind each other, and see-sawing which one gets ahead on features etc. The fact is, the more both platforms copy each other, the more features and options become available to the end user. It pushes both teams to innovate and critically think about their engineering and usability decisions.&lt;/p&gt;
&lt;p&gt;However what I like is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Lightning connector. This is how any connector should be, sturdy and unbreakable. MicroUSB was flimsy.&lt;/li&gt;
&lt;li&gt;Battery charge time. In my experience Android devices charge far far slower than iOS devices&lt;/li&gt;
&lt;li&gt;Battery life. No comparison really. Especially on standby.&lt;/li&gt;
&lt;li&gt;Performance. No lag, no stutter. It just delivers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What I am concerned I wont like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lack of customization&lt;/li&gt;
&lt;li&gt;Usually there is only a single way of doing things&lt;/li&gt;
&lt;li&gt;Settings are hidden in weird places for eg battery percentage&lt;/li&gt;
&lt;li&gt;Design feels a bit dated compared to material&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Recovering a phone with a broken screen</title><link href="/recovering-a-phone-with-a-broken-screen.html" rel="alternate"></link><updated>2015-10-25T00:00:00+02:00</updated><author><name>habeebq</name></author><id>tag:,2015-10-25:recovering-a-phone-with-a-broken-screen.html</id><summary type="html">&lt;p&gt;I broke the screen of my two-and-a-half year old Galaxy S3. Frustrated by the battery life, and the finicky microusb port, that just wouldnt charge the dying phone, I flung it across the room. I was a bit disappointed to break the screen in a single attempt, I was hoping I would get to bash it a bit more, but while the screen broke completely, the rest of the phone remained alive. It can still charge (oh, the irony) and turn on.&lt;/p&gt;
&lt;p&gt;In the moment later, I started to think what useful data can I get from the phone. While its easy enough to copy photos from the phone, and my contacts are all backed up to google, the only other thing I could think of was my FuelIO logs (mileage and fillup reports).&lt;/p&gt;
&lt;p&gt;Android 4.0 and later, come with some extra adb commands (backup and restore), that will let you backup and restore a particular apps data, or even the full system.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;adb&lt;/code&gt; is the &lt;code&gt;Android Debug Bridge&lt;/code&gt;, which is a command-line platform tool provided by google. It is run on the development host i.e. a windows/linux/mac machine, to which the android device is tethered, and you can send commands interactively to the device with this tool. I have used this in the past, and I remembered I was able to navigate the full file system of the phone, however it seems that in later versions there is more security and I cannot access system or data partitions anymore. So I really wondered how am I going to get the app's internal data without full root access to the file system.&lt;/p&gt;
&lt;p&gt;A bit of googling, and while I couldnt get full access, I figured out how to get a particular apps data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;adb backup -f &amp;lt;filename.ab&amp;gt; &amp;lt;packagename&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where the &lt;code&gt;.ab&lt;/code&gt; file is an android backup file (just a glorified tar file). You can get the apps package name from the play store, just search for it, and in the url you will see the package name in the id parameter, something like id=com.kajda.fuelio. So this becomes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;adb backup -f fuelio-data.ab com.kajda.fuelio
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It does mention that it will display a prompt on the screen where you can enter an encryption password, but luckily for me it didnt and it just went through. I'm not sure if it is because I had USB Debugging enabled by default. Once you have the backup file, plug in your other phone, install the app, and restore it by:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;adb restore fuelio-data.ab
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here it will prompt you on the phone if you do want to restore. Now when you open the app, you should see all the new data there.&lt;/p&gt;
&lt;p&gt;In the meantime just-in-case, I'd do a full backup of the phone to make sure I have anything I might need later.&lt;/p&gt;
&lt;p&gt;What if you want to check whether the backup does contain any files or not? Well, we need to convert the &lt;code&gt;ab&lt;/code&gt; file into a &lt;code&gt;tar&lt;/code&gt; file. There may be other methods, but I used this particular tool &lt;code&gt;abe&lt;/code&gt; aka &lt;code&gt;android-backup-extractor&lt;/code&gt;. After that even 7-zip can read &lt;code&gt;tar&lt;/code&gt; files so you should be able to verify the contents.&lt;/p&gt;
&lt;p&gt;For reference here are some useful links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://forum.xda-developers.com/google-nexus-5/general/guide-backup-data-root-t2824790"&gt;Guide to adb backup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://android.stackexchange.com/questions/28481/how-do-you-extract-an-apps-data-from-a-full-backup-made-through-adb-backup"&gt;Information on the Android backup format and tools to backup/restore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://forum.xda-developers.com/showthread.php?t=2011811"&gt;GUIDE on How to extract, create or edit android adb backups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.less-broken.com/blog/2012/04/transferring-apps-and-data-from-one.html"&gt;Backing up and restoring all app data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another thought, if you are in a predicament like me, you can try to use some screen mirroring software, to see what is going on. I'll try DroidExplorer or something like that later.&lt;/p&gt;</summary></entry><entry><title>Customizing the blog</title><link href="/customizing-the-blog.html" rel="alternate"></link><updated>2015-10-12T00:00:00+02:00</updated><author><name>habeebq</name></author><id>tag:,2015-10-12:customizing-the-blog.html</id><summary type="html">&lt;p&gt;So I'm no front-end developer. In the past I've tried to understand CSS, but it always felt alien to me. However, hearing and reading about it again and again, possibly rubbed it on to me a little bit. Without CSS we cannot alter the looks of the blog very easily, but using an overriding &lt;code&gt;custom.css&lt;/code&gt; file, we can override some of the default values and make it more personalized.&lt;/p&gt;
&lt;p&gt;I started off with the &lt;code&gt;pelican-bootstrap3&lt;/code&gt; theme by &lt;a href="https://github.com/DandyDev/pelican-bootstrap3"&gt;DandyDev&lt;/a&gt;. This guy has put in a lot of effort to port the theme properly to &lt;code&gt;Pelican&lt;/code&gt; with some extensions. Its a great theme and offers a lot out of the box, but I really wanted to make it look different. The theme also comes with a lot of pre-minified CSS (just CSS compacted for transport) from Thomas Park's &lt;a href="http://bootswatch.com/"&gt;Bootswatch&lt;/a&gt;. This contained a lot of different and interesting styles for bootstrap.&lt;/p&gt;
&lt;p&gt;Lets start by understanding what bootstrap is. Bootstrap is a front-end framework originating from Twitter, that basically has a library of component customisations. The HTML actually defines these components, and assigns each object a class. The bootstrap css, when loaded then styles all of these components. This framework contains a large number of component customisations like grids and tables etc. The main aim, is to make the website &lt;strong&gt;responsive&lt;/strong&gt;. This means it loads and scales properly on mobile, tablets and desktops etc. If you see a bootstrap based website, it will look good on any screen size, and will act a bit differently on them, for e.g. the menu and navbar acts differently on mobile vs desktop.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bootswatch.com/"&gt;Bootswatch&lt;/a&gt; hosts some nice looking free themes for bootstrap. These mainly change the color schemes etc. Also, fortunately, the &lt;code&gt;pelican-bootstrap3&lt;/code&gt; comes with these themes already built-in! You do not need to add them yourself.&lt;/p&gt;
&lt;p&gt;So lets start off by cloning the bootstrap theme to get a local copy bootstrap theme in Pelican, we can clone the. There are instructions on the &lt;a href="https://github.com/DandyDev/pelican-bootstrap3"&gt;repo&lt;/a&gt; github too:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/DandyDev/pelican-bootstrap3.git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then in your &lt;code&gt;pelicanconf.py&lt;/code&gt; point to this theme, and also point to any bootstrap theme you like from bootswatch (or you can see all the css options in &lt;code&gt;pelican-bootstrap3/static/css/bootstrap.*.min.css&lt;/code&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'/home/habeeb/workspace/habeebq.github.io/blog/pelican-bootstrap3'&lt;/span&gt;
&lt;span class="n"&gt;BOOTSTRAP_THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'readable'&lt;/span&gt;
&lt;span class="n"&gt;PYGMENTS_STYLE&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'monokai'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, so now it looks like a normal bootstrap theme with a navbar and sidebar etc.&lt;/p&gt;
&lt;p&gt;Lets start with easy stuff.&lt;/p&gt;
&lt;p&gt;I turned the sidebar off and removed categories from the Navbar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#Navbar&lt;/span&gt;
&lt;span class="n"&gt;DISPLAY_CATEGORIES_ON_MENU&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="c"&gt;#SIDEBAR&lt;/span&gt;
&lt;span class="n"&gt;HIDE_SIDEBAR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Added some more information to the Article header (the section underneath the article title):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Article Header&lt;/span&gt;
&lt;span class="n"&gt;SHOW_ARTICLE_AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;SHOW_ARTICLE_CATEGORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;SHOW_DATE_MODIFIED&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since the tables werent showing properly I had to install a bootstrap plugin called &lt;a href="https://github.com/ingwinlu/pelican-bootstrapify"&gt;pelican-bootstrapify&lt;/a&gt;, that cleans up some of bootstraps code. It seems to replace the tags in the table, I am not yet 100% sure what its flow is. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Fixing the tables formatting&lt;/span&gt;
&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'/home/habeeb/workspace/pelican_plugins/pelican-bootstrapify'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'bootstrapify'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So that was most of the seemingly easy part, however it wasnt so easy when I was trying to figure it out on google and stackoverflow.&lt;/p&gt;
&lt;p&gt;Now, how to make changes to the font, colors, navbar, icons, linkcolor and jinja template modifications.&lt;/p&gt;
&lt;h4&gt;Customizing the fonts&lt;/h4&gt;
&lt;p&gt;Lets start with the fonts, where we used google fonts to make it easier for us. Now the font needs to be defined in the jinja template for base.html. This is in pelican-bootstrapify3/templates/base.html
In the head section of the template we define the following. We have created a new variable called GOOGLEFONT in &lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% if GOOGLEFONT %}
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"{{ GOOGLEFONT }}"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
{% endif %}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then in the &lt;code&gt;pelicanconf.py&lt;/code&gt; we define the value of GOOGLEFONT as just the location of it. You can find this location on the Google Fonts website. The bootstrap theme we use also supports an overriding custom.css if it is defined, so we also define that here.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Bootstrap extra css&lt;/span&gt;
&lt;span class="n"&gt;CUSTOM_CSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'theme/css/custom.css'&lt;/span&gt;
&lt;span class="n"&gt;GOOGLEFONT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'https://fonts.googleapis.com/css?family=Source+Sans+Pro'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then create a new file in pelican-bootstrap3/static/css/custom.css or wherever you feel like creating it, but make sure the path mentioned above is correct.&lt;/p&gt;
&lt;p&gt;Ok, so we have acheived the inclusion of the font in the html header now, but we havent applied the font anywhere. We will now use the &lt;code&gt;custom.css&lt;/code&gt; file to override bootstrap's defaults. You can apply the font to any tag, in our case, we applied it to the whole body of the html.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;font-family&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Source Sans Pro"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"Helvetica Neue"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"Open Sans"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Helvetica&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="k"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;line-height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;728571&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So we have changed the font to Source Sans Pro, with a couple of fallbacks. We also increased the font size and increase the line-height effectively the distance between lines.&lt;/p&gt;
&lt;h4&gt;Customizing the Navbar style&lt;/h4&gt;
&lt;p&gt;Next I wanted to customize the navbar i.e. the menu bar at the top of the page. Changing the height for that was easy (again in &lt;code&gt;custom.css&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nc"&gt;.navbar-brand&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.navbar-nav&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;line-height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;padding-top&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, changing the colors of the Navbar was much harder, and I had to use an online tool to generate the CSS for that. See this &lt;a href="http://bootstrap3-menu.codedorigin.com/#sthash.RdlMZNJ4.mNUqqyEa.dpbs"&gt;link&lt;/a&gt; and paste the generated css in your &lt;code&gt;custom.css&lt;/code&gt; again.&lt;/p&gt;
&lt;h4&gt;Font Awesome Icons in the Navbar&lt;/h4&gt;
&lt;p&gt;Adding font-awesome icons to the Navbar requires modification of the jinja template, again we go back to our &lt;code&gt;base.html&lt;/code&gt; file. &lt;/p&gt;
&lt;p&gt;We modify the section where MENUITEMS are being iterated over. Add the font awesome icon here (this is possibly not the best way to add the icon in terms of styling/spanning, I need to improve this):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% for title, link, icon in MENUITEMS %}
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"{{ link }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fa fa-{{ icon }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;  {{ title }}&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
{% endfor %}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see this requires an extra icon to be described in the navbar menu item section in the &lt;code&gt;pelicanconf.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;MENUITEMS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;'projects'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'/projects.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'code-fork'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'whoami'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'/about.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'user'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Link colors&lt;/h4&gt;
&lt;p&gt;This next part about changing the link colors is a bit ...hmmm...not the best solution.
The links generated by Pelican seem to all be tagged as 'a' but with no other class name. So the only way to change the link color is to change ALL the link colors sadly. &lt;/p&gt;
&lt;p&gt;Changing the link colors&lt;/p&gt;
&lt;p&gt;So I did something like this in my &lt;code&gt;custom.css&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;/* Code tags to be made purple!*/&lt;/span&gt;
&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#523AB0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Well, this also changed my header links etc, which I had to override once again to set them back to black:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nc"&gt;.page-header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So well, changing the link color might generate too much work. I havent found a way to add a class into it so i can customize it separately.&lt;/p&gt;
&lt;h4&gt;Customizing the page width&lt;/h4&gt;
&lt;p&gt;Its possible to also control how wide the page body would be. I used the following in my &lt;code&gt;custom.css&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;min-width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1000px&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;max-width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;850px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To be honest I really pulled this value out as my monitor is only 1600x1200 and of that my Taskbar is on the left so causing the browser to get less pixels. I hope it doesnt really matter in the big picture!&lt;/p&gt;
&lt;p&gt;So well, there it is, most of my customizations to the bootstrap theme for now. &lt;/p&gt;</summary></entry><entry><title>Setting up Pelican</title><link href="/setting-up-pelican.html" rel="alternate"></link><updated>2015-10-12T00:00:00+02:00</updated><author><name>habeebq</name></author><id>tag:,2015-10-12:setting-up-pelican.html</id><summary type="html">&lt;p&gt;I used to blog (when I could!) on Wordpress. Wordpress is great and throws in a huge amount of functionality for free, and also has a huge amount of support.
However, blogging on wordpress.com was a bit limited as I could not (understandably) use any plugins and themes. Also, wordpress was a bit of overkill and also written in PHP which isnt something I am familiar with.
So in order to go deeper, I saw a couple of blogs I liked which had a clean and minimal interface and were generated in Jekyll. So started my journey...&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; looked great, it had a load of themes, well supported and good traction. So I installed it, however, the installation wasnt as smooth as I had hoped it to be, partially due to my overzealous bypassing of most of the documentation. Also I had issues in installing ruby, once I got ruby I needed to install bundler, and I realized I need to update them all in different ways. I was unfamililar with ruby and I wondered if there is something similar available for &lt;code&gt;Python&lt;/code&gt;, and hence I found &lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While &lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; seemed to be less mature than &lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;, and has less themes, it seemed much more bare, and I felt I could customize and hack it a bit more. There is also &lt;a href="https://getnikola.com/"&gt;Nikola&lt;/a&gt; which looks amazing too, but it seemed it requires a bit more support, however it had a similar structure to Jekyll so it must be a good framework too.&lt;/p&gt;
&lt;p&gt;Never having done web front end it was a bit of a curve for me (and still is) to figure out, but things like jinja, css, bootstrap werent too bad, but I've had to figure things out.&lt;/p&gt;
&lt;p&gt;Installing Pelican was easy and editing the pelicanconf.py to set things up was pretty smooth. What I needed to figure out was how to get both the blog on version control and the blog on github static pages at the same time in a single commit. I eventually settled on a structure where I generate the blog static files in a lower directory (habeebq.github.io) and save the blog content, templates and script in a directory called blog within that. This allows me to update the site in a single commit.&lt;/p&gt;
&lt;p&gt;Settling on a theme was tough, and I am still not sure. I got Flex working first (adblock was blocking out the font-awesome icons), but then i moved to pelican-bootstrap3. I modified it a bit, to add wells, and to fix markdown tables by enabling the plugin &lt;a href="https://github.com/ingwinlu/pelican-bootstrapify"&gt;bootstrapify&lt;/a&gt;. There is a huge list of &lt;a href="https://github.com/getpelican/pelican-themes"&gt;themes here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I am also coming to grips with markdown, I hope to be able to comment all my code in markdown and generate a readable beautified document from it.&lt;/p&gt;
&lt;p&gt;I also had to figure out that to get syntax highlighting to work, the code block needs to be indented atleast once.&lt;/p&gt;
&lt;p&gt;Now that I type this, it seems I havent done much, but im sure it took my a bit of effort to get my flow running, but i think im almost there. Just need to import my existing blog in here and see how it goes.&lt;/p&gt;
&lt;p&gt;As an example here is my current &lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u'habeebq'&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u'BITSMASHING'&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;
&lt;span class="n"&gt;SITEDESCRIPTION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Randomizing the unknown...'&lt;/span&gt;

&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'content'&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Europe/Paris'&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u'en'&lt;/span&gt;

&lt;span class="c"&gt;# Feed generation is usually not desired when developing&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

&lt;span class="c"&gt;# Blogroll&lt;/span&gt;
&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;'Pelican'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'http://getpelican.com/'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Python.org'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'http://python.org/'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Jinja2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'http://jinja.pocoo.org'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c"&gt;# Social widget&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;'linkedin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'#'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'google-plus'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'#'&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="n"&gt;MD_EXTENSIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'codehilite(css_class=highlight)'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'extra'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;LOAD_CONTENT_CACHE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;MAIN_MENU&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;MENUITEMS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;'projects'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'/projects.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'code-fork'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
             &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'whoami'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'/about.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'user'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'/home/habeeb/workspace/habeebq.github.io/blog/pelican-bootstrap3'&lt;/span&gt;
&lt;span class="n"&gt;BOOTSTRAP_THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'readable'&lt;/span&gt;
&lt;span class="n"&gt;PYGMENTS_STYLE&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'monokai'&lt;/span&gt;

&lt;span class="c"&gt;#Navbar&lt;/span&gt;
&lt;span class="n"&gt;DISPLAY_CATEGORIES_ON_MENU&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

&lt;span class="c"&gt;#SIDEBAR&lt;/span&gt;
&lt;span class="n"&gt;HIDE_SIDEBAR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c"&gt;# Article Header&lt;/span&gt;
&lt;span class="n"&gt;SHOW_ARTICLE_AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;SHOW_ARTICLE_CATEGORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;SHOW_DATE_MODIFIED&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c"&gt;# Fixing the tables formatting&lt;/span&gt;
&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'/home/habeeb/workspace/pelican_plugins/pelican-bootstrapify'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'bootstrapify'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c"&gt;# Bootstrap extra css&lt;/span&gt;
&lt;span class="n"&gt;CUSTOM_CSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'theme/css/custom.css'&lt;/span&gt;
&lt;span class="n"&gt;GOOGLEFONT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'https://fonts.googleapis.com/css?family=Source+Sans+Pro'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry></feed>